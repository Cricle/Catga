events {
    worker_connections 1024;
}

http {
    # Upstream for OrderApi (负载均衡)
    upstream order_api_backend {
        least_conn;  # 最少连接负载均衡

        server order-api-1:8080 max_fails=3 fail_timeout=30s;
        server order-api-2:8080 max_fails=3 fail_timeout=30s;
        server order-api-3:8080 max_fails=3 fail_timeout=30s;

        keepalive 32;
    }

    # 日志格式（包含追踪信息）
    log_format trace '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     'rt=$request_time uct="$upstream_connect_time" '
                     'uht="$upstream_header_time" urt="$upstream_response_time" '
                     'trace_id=$http_x_trace_id';

    access_log /var/log/nginx/access.log trace;
    error_log /var/log/nginx/error.log warn;

    # 代理设置
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # 分布式追踪（传递 Trace ID）
    proxy_set_header X-Trace-ID $http_x_trace_id;
    proxy_set_header X-Span-ID $request_id;

    # 超时设置
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # 缓冲设置
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;

    server {
        listen 80;
        server_name _;

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx 状态监控
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            deny all;
        }

        # API 路由到后端 OrderApi 集群
        location /api/ {
            proxy_pass http://order_api_backend;

            # 健康检查
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;

            # 限流（可选）
            # limit_req zone=api_limit burst=20 nodelay;
        }

        # Swagger UI
        location /swagger {
            proxy_pass http://order_api_backend;
        }

        # 指标端点（Prometheus）
        location /metrics {
            proxy_pass http://order_api_backend;
            allow 172.20.0.0/16;
            deny all;
        }

        # 默认路由
        location / {
            return 404 '{"error": "Not Found"}';
            add_header Content-Type application/json;
        }
    }
}

