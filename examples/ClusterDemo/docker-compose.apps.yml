version: '3.8'

# Catga 应用服务集群
# 使用: docker-compose -f docker-compose.apps.yml up -d --scale order-service=3

networks:
  catga-cluster:
    external: true

services:
  # ============================================
  # OrderApi（HTTP API 入口）
  # ============================================

  order-api-1:
    build:
      context: ../OrderApi
      dockerfile: Dockerfile
    container_name: cluster-order-api-1
    hostname: order-api-1
    networks:
      - catga-cluster
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - NATS__Url=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - Redis__Configuration=redis-1:6379,redis-2:6379,redis-3:6379
      - Catga__EnableIdempotency=true
      - Catga__EnableRetry=true
      - Catga__EnableCircuitBreaker=true
      - Catga__MaxRetryAttempts=3
      - OpenTelemetry__ServiceName=OrderApi
      - OpenTelemetry__JaegerEndpoint=http://jaeger:14268/api/traces
      - Prometheus__Enabled=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - nats-1
      - redis-1
    restart: unless-stopped

  order-api-2:
    build:
      context: ../OrderApi
      dockerfile: Dockerfile
    container_name: cluster-order-api-2
    hostname: order-api-2
    networks:
      - catga-cluster
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - NATS__Url=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - Redis__Configuration=redis-1:6379,redis-2:6379,redis-3:6379
      - Catga__EnableIdempotency=true
      - Catga__EnableRetry=true
      - Catga__EnableCircuitBreaker=true
      - Catga__MaxRetryAttempts=3
      - OpenTelemetry__ServiceName=OrderApi
      - OpenTelemetry__JaegerEndpoint=http://jaeger:14268/api/traces
      - Prometheus__Enabled=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - nats-1
      - redis-1
    restart: unless-stopped

  order-api-3:
    build:
      context: ../OrderApi
      dockerfile: Dockerfile
    container_name: cluster-order-api-3
    hostname: order-api-3
    networks:
      - catga-cluster
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - NATS__Url=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - Redis__Configuration=redis-1:6379,redis-2:6379,redis-3:6379
      - Catga__EnableIdempotency=true
      - Catga__EnableRetry=true
      - Catga__EnableCircuitBreaker=true
      - Catga__MaxRetryAttempts=3
      - OpenTelemetry__ServiceName=OrderApi
      - OpenTelemetry__JaegerEndpoint=http://jaeger:14268/api/traces
      - Prometheus__Enabled=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - nats-1
      - redis-1
    restart: unless-stopped

  # ============================================
  # OrderService（订单处理服务，NATS 队列组）
  # ============================================

  order-service:
    build:
      context: ../NatsDistributed/OrderService
      dockerfile: Dockerfile
    networks:
      - catga-cluster
    environment:
      - DOTNET_ENVIRONMENT=Production
      - NATS__Url=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - NATS__QueueGroup=order-processing
      - Redis__Configuration=redis-1:6379,redis-2:6379,redis-3:6379
      - Catga__EnableIdempotency=true
      - Catga__EnableRetry=true
      - Catga__EnableCircuitBreaker=true
      - Catga__MaxRetryAttempts=3
      - OpenTelemetry__ServiceName=OrderService
      - OpenTelemetry__JaegerEndpoint=http://jaeger:14268/api/traces
      - Prometheus__Enabled=true
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - nats-1
      - redis-1
    restart: unless-stopped
    # 支持动态扩缩容
    # docker-compose up -d --scale order-service=5

  # ============================================
  # NotificationService（通知服务，事件订阅）
  # ============================================

  notification-service:
    build:
      context: ../NatsDistributed/NotificationService
      dockerfile: Dockerfile
    networks:
      - catga-cluster
    environment:
      - DOTNET_ENVIRONMENT=Production
      - NATS__Url=nats://nats-1:4222,nats://nats-2:4222,nats://nats-3:4222
      - OpenTelemetry__ServiceName=NotificationService
      - OpenTelemetry__JaegerEndpoint=http://jaeger:14268/api/traces
      - Prometheus__Enabled=true
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - nats-1
    restart: unless-stopped
    # 支持动态扩缩容
    # docker-compose up -d --scale notification-service=3

