version: '3.8'

# Catga 集群基础设施：NATS 集群 + Redis 集群 + 监控
# 使用: docker-compose -f docker-compose.infra.yml up -d

networks:
  catga-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data-1:
  redis-data-2:
  redis-data-3:
  prometheus-data:
  grafana-data:

services:
  # ============================================
  # NATS 集群（P2P 无主架构）
  # ============================================

  nats-1:
    image: nats:latest
    container_name: cluster-nats-1
    hostname: nats-1
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.11
    ports:
      - "4222:4222"  # Client
      - "8222:8222"  # HTTP监控
      - "6222:6222"  # Cluster routing
    command: >
      --name nats-1
      --cluster_name catga-cluster
      --cluster nats://0.0.0.0:6222
      --routes nats://172.20.0.12:6222,nats://172.20.0.13:6222
      --http_port 8222
      --jetstream
      --store_dir /data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  nats-2:
    image: nats:latest
    container_name: cluster-nats-2
    hostname: nats-2
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.12
    ports:
      - "4223:4222"
      - "8223:8222"
      - "6223:6222"
    command: >
      --name nats-2
      --cluster_name catga-cluster
      --cluster nats://0.0.0.0:6222
      --routes nats://172.20.0.11:6222,nats://172.20.0.13:6222
      --http_port 8222
      --jetstream
      --store_dir /data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  nats-3:
    image: nats:latest
    container_name: cluster-nats-3
    hostname: nats-3
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.13
    ports:
      - "4224:4222"
      - "8224:8222"
      - "6224:6222"
    command: >
      --name nats-3
      --cluster_name catga-cluster
      --cluster nats://0.0.0.0:6222
      --routes nats://172.20.0.11:6222,nats://172.20.0.12:6222
      --http_port 8222
      --jetstream
      --store_dir /data
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # ============================================
  # Redis 集群（主从复制 + Sentinel）
  # ============================================

  redis-1:
    image: redis:7-alpine
    container_name: cluster-redis-1
    hostname: redis-1
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.21
    ports:
      - "6379:6379"
    volumes:
      - redis-data-1:/data
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis-2:
    image: redis:7-alpine
    container_name: cluster-redis-2
    hostname: redis-2
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.22
    ports:
      - "6380:6379"
    volumes:
      - redis-data-2:/data
    command: >
      redis-server
      --replicaof redis-1 6379
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      - redis-1

  redis-3:
    image: redis:7-alpine
    container_name: cluster-redis-3
    hostname: redis-3
    networks:
      catga-cluster:
        ipv4_address: 172.20.0.23
    ports:
      - "6381:6379"
    volumes:
      - redis-data-3:/data
    command: >
      redis-server
      --replicaof redis-1 6379
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    depends_on:
      - redis-1

  # ============================================
  # 监控和可观测性
  # ============================================

  prometheus:
    image: prom/prometheus:latest
    container_name: cluster-prometheus
    hostname: prometheus
    networks:
      - catga-cluster
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: cluster-grafana
    hostname: grafana
    networks:
      - catga-cluster
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./config/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./config/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: cluster-jaeger
    hostname: jaeger
    networks:
      - catga-cluster
    ports:
      - "5775:5775/udp"  # Zipkin Thrift
      - "6831:6831/udp"  # Jaeger Thrift
      - "6832:6832/udp"  # Jaeger Thrift
      - "5778:5778"      # Serve configs
      - "16686:16686"    # Web UI
      - "14268:14268"    # Jaeger Collector
      - "14250:14250"    # gRPC
      - "9411:9411"      # Zipkin
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:14269/"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ============================================
  # Nginx 负载均衡器
  # ============================================

  nginx:
    image: nginx:alpine
    container_name: cluster-nginx
    hostname: nginx
    networks:
      - catga-cluster
    ports:
      - "8080:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nats-1
      - nats-2
      - nats-3
      - redis-1
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/health"]
      interval: 10s
      timeout: 3s
      retries: 3

