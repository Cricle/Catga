var builder = DistributedApplication.CreateBuilder(args);

// ===== Infrastructure Configuration =====

// Redis - Distributed cache, locks, idempotency
var redis = builder.AddRedis("redis")
    .WithDataVolume()
    .WithRedisCommander()
    .WithLifetime(ContainerLifetime.Persistent);

// NATS - Distributed messaging with JetStream
var nats = builder.AddNats("nats")
    .WithDataVolume()
    .WithJetStream()
    .WithLifetime(ContainerLifetime.Persistent);

// ===== Microservices Configuration =====

// OrderSystem API - Order service (single instance for demo)

var orderApi = builder.AddProject<Projects.OrderSystem_Api>("order-api")
    .WithReference(redis)
    .WithReference(nats)
    .WithEnvironment("ASPNETCORE_ENVIRONMENT", "Development")
    .WithHttpEndpoint(port: 5000, name: "http");        // HTTP endpoint on port 5000

// ===== Aspire Features =====
//
// ðŸŽ¯ Auto-enabled features:
//   âœ… OpenTelemetry - Tracing, metrics, logs â†’ Aspire Dashboard
//   âœ… Service Discovery - Auto endpoint resolution
//   âœ… Health Checks - /health, /health/live, /health/ready
//   âœ… Resilience - Retry, circuit breaker, timeout
//   âœ… Graceful Lifecycle - Catga shutdown & recovery
//
// ðŸ“Š Access Aspire Dashboard: http://localhost:15888
// ðŸ“Š Access OrderSystem UI: http://localhost:5000
// ðŸ“– See: README.md for complete guide

builder.Build().Run();
